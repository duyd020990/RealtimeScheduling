#!/bin/sh -f

P_TASK_SET=TS-100-0.33
AP_TASK_SET=TS-5

\rm migration.csv
\rm preemption.csv
\rm overhead.csv
\rm response.csv

echo ", LAA, PFAIR, RUN" > results.csv
echo ", LAA, PFAIR, RUN" > migration.csv
echo ", LAA, PFAIR, RUN" > preemption.csv
echo ", LAA, PFAIR, RUN" > overhead.csv
echo ", LAA, PFAIR, RUN" > response.csv

I=4
while  [ $I -ne 8 ]
do
	echo "" 
	echo "******** $I Processors ********"
	echo "" >> results.csv
	echo "" >> migration.csv
	echo "" >> preemption.csv
	echo "" >> overhead.csv
	echo "" >> response.csv
	
	echo "******** No. of Processors: $I ********" >> results.csv
	echo "******** No. of Processors: $I ********" >> migration.csv
	echo "******** No. of Processors: $I ********" >> preemption.csv
	echo "******** No. of Processors: $I ********" >> overhead.csv
	echo "******** No. of Processors: $I ********" >> response.csv

	J=75
	while [  $J -ne 100 ]
	do
		echo "" >> results.csv
		echo "" >> migration.csv
		echo "" >> preemption.csv
		echo "" >> overhead.csv
		echo "" >> response.csv
		echo "******** Periodic Tasks: $J% ********" 
		echo "******** Periodic Tasks: $J% ********" >> results.csv
		echo "******** Periodic Tasks: $J% ********" >> migration.csv
		echo "******** Periodic Tasks: $J% ********" >> preemption.csv
		echo "******** Periodic Tasks: $J% ********" >> overhead.csv
		echo "******** Periodic Tasks: $J% ********" >> response.csv
		K=0
		while [ $K -ne 10 ]
		do
			K=`expr $K + 1`
			echo ""
			echo "******** Aperiodic Task Set: No. $K ********"
			echo "" >> results.csv
			echo "" >> migration.csv
			echo "" >> preemption.csv
			echo "" >> overhead.csv
			echo "======== Aperiodic Task Set: No. $K ========" >> results.csv
			echo "======== Aperiodic Task Set: No. $K ========" >> migration.csv
			echo "======== Aperiodic Task Set: No. $K ========" >> preemption.csv
			echo "======== Aperiodic Task Set: No. $K ========" >> overhead.csv
			echo "======== Aperiodic Task Set: No. $K ========" >> response.csv
			cp -p ./Aperiodic_Task_Sets/aperiodic.cfg.${I}-${K} ./aperiodic.cfg
			L=0
			while [ $L -ne 10 ]
			do
				L=`expr $L + 1`
				echo ""
				echo "======== Periodic Task Set: No. $L ========"
				cp -p ./Periodic_Task_Sets/periodic.cfg.${I}-${J}-${L} ./periodic.cfg
				./Schedule >> results.csv
			done
			echo "Average,=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0])" >> results.csv
			echo "Average,=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0])" >> migration.csv
			echo "Average,=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0])" >> preemption.csv
			echo "Average,=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0])" >> overhead.csv
			echo "Average,=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0]),=AVERAGE(R[-10]C[0]:R[-1]C[0])" >> response.csv
		done
		echo "$J%,\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\"" >> results.csv
		echo "$J%,\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\"" >> migration.csv
		echo "$J%,\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\"" >> preemption.csv
		echo "$J%,\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\"" >> overhead.csv
		echo "$J%,\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\",\"=AVERAGE(R[-1]C,R[-13]C,R[-25]C,R[-37]C,R[-49]C,R[-61]C,R[-73]C,R[-85]C,R[-97]C,R[-109]C)\"" >> response.csv
		J=`expr $J + 5`
	done
	echo "******** End of $I processors ********"
	I=`expr $I + $I`
done
echo "" >> results.csv
echo "" >> migration.csv
echo "" >> preemption.csv
echo "" >> overhead.csv
echo "" >> response.csv
echo "******** Summary ********" >> results.csv
echo "******** Summary ********" >> migration.csv
echo "******** Summary ********" >> preemption.csv
echo "******** Summary ********" >> overhead.csv
echo "******** Summary ********" >> response.csv

echo "75%,=R[-495]C,=R[-495]C,=R[-495]C" >> results.csv
echo "75%,=R[-495]C,=R[-495]C,=R[-495]C" >> migration.csv
echo "75%,=R[-495]C,=R[-495]C,=R[-495]C" >> preemption.csv
echo "75%,=R[-495]C,=R[-495]C,=R[-495]C" >> overhead.csv
echo "75%,=R[-495]C,=R[-495]C,=R[-495]C" >> response.csv

echo "80%,=R[-373]C,=R[-373]C,=R[-373]C" >> results.csv
echo "80%,=R[-373]C,=R[-373]C,=R[-373]C" >> migration.csv
echo "80%,=R[-373]C,=R[-373]C,=R[-373]C" >> preemption.csv
echo "80%,=R[-373]C,=R[-373]C,=R[-373]C" >> overhead.csv
echo "80%,=R[-373]C,=R[-373]C,=R[-373]C" >> response.csv

echo "85%,=R[-251]C,=R[-251]C,=R[-251]C" >> results.csv
echo "85%,=R[-251]C,=R[-251]C,=R[-251]C" >> migration.csv
echo "85%,=R[-251]C,=R[-251]C,=R[-251]C" >> preemption.csv
echo "85%,=R[-251]C,=R[-251]C,=R[-251]C" >> overhead.csv
echo "85%,=R[-251]C,=R[-251]C,=R[-251]C" >> response.csv

echo "90%,=R[-129]C,=R[-129]C,=R[-129]C" >> results.csv
echo "90%,=R[-129]C,=R[-129]C,=R[-129]C" >> migration.csv
echo "90%,=R[-129]C,=R[-129]C,=R[-129]C" >> preemption.csv
echo "90%,=R[-129]C,=R[-129]C,=R[-129]C" >> overhead.csv
echo "90%,=R[-129]C,=R[-129]C,=R[-129]C" >> response.csv

echo "95%,=R[-7]C,=R[-7]C,=R[-7]C" >> results.csv
echo "95%,=R[-7]C,=R[-7]C,=R[-7]C" >> migration.csv
echo "95%,=R[-7]C,=R[-7]C,=R[-7]C" >> preemption.csv
echo "95%,=R[-7]C,=R[-7]C,=R[-7]C" >> overhead.csv
echo "95%,=R[-7]C,=R[-7]C,=R[-7]C" >> response.csv
echo "******** Done ********"